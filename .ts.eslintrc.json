{
    "extends": [
        "plugin:import/typescript",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "prettier/@typescript-eslint"
    ],
    "env": {
        "browser": true,
        "es6": true
    },
    "parserOptions": {
        "ecmaVersion": 2020,
        "project": "./tsconfig.eslint.json",
        "sourceType": "module"
    },
    "rules": {
        "comma-dangle": [
            "error",
            {
                "arrays": "always-multiline",
                "objects": "always-multiline",
                "imports": "always-multiline",
                "exports": "always-multiline",
                "functions": "always-multiline"
            }
        ],

        // Typescript Recommended Requiring Type
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "require-await": "off",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/unbound-method": "off", // Unwanted
        // "no-var": "error", // TS Already Set
        // "prefer-const": "error", // TS Already Set
        // "prefer-rest-params": "error", // TS Already Set
        // "prefer-spread": "error", // TS Already Set

        // Typescript Extra Requiring Type
        "jsdoc/check-examples": "off",
        "@typescript-eslint/no-floating-promises": "off", // Ollies
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/promise-function-async": "off", // Ollies
        "@typescript-eslint/require-array-sort-compare": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/strict-boolean-expressions": "off", // Ollies

        // Typescript Recommended
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/ban-ts-ignore": "error",
        "@typescript-eslint/ban-types": "error",
        "camelcase": "off",
        "@typescript-eslint/camelcase": ["error", { "properties": "never" }],
        "@typescript-eslint/class-name-casing": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/interface-name-prefix": "error",
        "@typescript-eslint/member-delimiter-style": "error",
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "off", // Unwanted
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "off", // Unwanted
        "@typescript-eslint/no-inferrable-types": "off", // Unwanted
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-this-alias": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
            "error",
            { "vars": "all", "args": "none" }
        ],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        // "no-var": "error", // TS Already Set
        // "prefer-const": "error", // TS Already Set
        // "prefer-rest-params": "error", // TS Already Set
        // "prefer-spread": "error", // TS Already Set

        // Typescript Extra
        "@typescript-eslint/array-type": "error",
        "brace-style": "off",
        "@typescript-eslint/brace-style": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": "error",
        "@typescript-eslint/generic-type-naming": "error",
        "indent": "off",
        "@typescript-eslint/indent": ["off", 4, { "SwitchCase": 1 }], // Prettier Compatibility
        "@typescript-eslint/member-naming": "error",
        "@typescript-eslint/member-ordering": "error",
        "no-extra-parens": "off",
        "@typescript-eslint/no-extra-parens": "off", // Unwanted
        "@typescript-eslint/no-extraneous-class": "off", // Unwanted
        "no-magic-numbers": "off",
        "@typescript-eslint/no-magic-numbers": "off", // Unwanted
        "@typescript-eslint/no-parameter-properties": "off", // Unwanted
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-type-alias": "error",
        // "@typescript-eslint/no-unnecessary-condition": "error", // Not Released Yey
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "off", // Unwanted
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "quotes": "off",
        "@typescript-eslint/quotes": [
            "error",
            "single",
            { "avoidEscape": true }
        ],
        "semi": "off",
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/typedef": "error",
        "@typescript-eslint/unified-signatures": "error"
    }
}
