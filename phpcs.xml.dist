<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="TaylorDesignWordPressThemePHPCS"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd">
    <description>The Taylor Design WordPress Theme PHPCS coding standard.</description>

    <!-- Scan all files in directory -->
    <file>.</file>

    <!-- UTF-8 -->
    <arg name="encoding" value="utf-8"/>

    <!-- Scan only PHP files -->
    <arg name="extensions" value="php"/>

    <!-- Show colors in console -->
    <arg value="-colors"/>

    <!-- Show sniff codes in all reports -->
    <arg value="s"/>

    <!-- Cache -->
    <arg name="cache" value=".phpcs-cache"/>

    <!-- Error Levels -->
    <arg name="error-severity" value="1"/>
    <arg name="warning-severity" value="1"/>

    <!-- Exclude General -->
    <exclude-pattern>.git/*</exclude-pattern>
    <exclude-pattern>.svn/*</exclude-pattern>
    <exclude-pattern>node_modules/*</exclude-pattern>
    <exclude-pattern>vendor/*</exclude-pattern>
    <exclude-pattern>var/*</exclude-pattern>

    <!-- Sage-->
    <exclude-pattern>dist/*</exclude-pattern>
    <exclude-pattern>resources/*</exclude-pattern>
    <exclude-pattern>storage/*</exclude-pattern>
    <!-- <exclude-pattern>index.php</exclude-pattern> -->

    <rule ref="PSR1"/>

    <rule ref="PSR12">
        <exclude name="PSR12.Files.FileHeader.SpacingAfterBlock"/>
    </rule>

    <rule ref="PHPCompatibility"/>

    <rule ref="PHPCompatibilityWP"/>

    <rule ref="WordPress">
        <!-- Disabled because they are unwanted. -->
        <exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
        <exclude name="Generic.Classes.OpeningBraceSameLine.BraceOnNewLine"/>
        <exclude name="Generic.Commenting.DocComment.MissingShort"/>
        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSameWarning"/>
        <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine"/>
        <exclude name="Generic.WhiteSpace.ArbitraryParenthesesSpacing.SpaceAfterOpen"/>
        <exclude name="Generic.WhiteSpace.ArbitraryParenthesesSpacing.SpaceBeforeClose"/>
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/>
        <exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket"/>
        <exclude name="Squiz.Commenting.FileComment.Missing"/>
        <exclude name="Squiz.Commenting.FileComment.MissingPackageTag"/>
        <exclude name="Squiz.Commenting.FileComment.SpacingAfterComment"/>
        <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
        <exclude name="Squiz.Commenting.InlineComment.SpacingBefore"/>
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen"/>
        <exclude name="Squiz.PHP.CommentedOutCode.Found"/>
        <exclude name="Squiz.Strings.ConcatenationSpacing.PaddingFound"/>
        <exclude name="Squiz.WhiteSpace.SemicolonSpacing.Incorrect"/>
        <exclude name="WordPress.Arrays.ArrayDeclarationSpacing.NoSpaceAfterArrayOpener"/>
        <exclude name="WordPress.Arrays.ArrayDeclarationSpacing.NoSpaceBeforeArrayCloser"/>
        <exclude name="WordPress.Arrays.ArrayKeySpacingRestrictions.NoSpacesAroundArrayKeys"/>
        <exclude name="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned"/>
        <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.ShortPrefixPassed"/>
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.NotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
        <exclude name="WordPress.WhiteSpace.CastStructureSpacing.NoSpaceBeforeOpenParenthesis"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.ExtraSpaceAfterCloseParenthesis"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.NoSpaceAfterOpenParenthesis"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.NoSpaceBeforeCloseParenthesis"/>
        <exclude name="WordPress.WhiteSpace.OperatorSpacing.NoSpaceAfter"/>
        <exclude name="WordPress.WhiteSpace.OperatorSpacing.NoSpaceBefore"/>
    </rule>

    <rule ref="WordPress.Security.EscapeOutput">
        <properties>
            <property name="customAutoEscapedFunctions" type="array">
                <element value="sage_example_function"/>
                <element value="underscores_example_function"/>
                <element value="bytaylordesign_example_function"/>
            </property>
        </properties>
    </rule>

    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <element value="sage"/>
                <element value="underscores"/>
                <element value="bytaylordesign"/>
            </property>
        </properties>
    </rule>

    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <exclude-pattern>*</exclude-pattern>
        <properties>
            <property name="prefixes" type="array">
                <element value="sage"/>
                <element value="underscores"/>
                <element value="bytaylordesign"/>
            </property>
        </properties>
    </rule>

    <rule ref="WPThemeReview"/>

    <rule ref="Symfony">
        <exclude name="PSR2"/>
        <exclude name="Squiz.Strings.ConcatenationSpacing"/>

        <!-- Disabled because they are unwanted. -->
        <exclude name="Symfony.ControlStructure.YodaConditions.Invalid"/>
        <exclude name="Symfony.Functions.Arguments.Invalid"/>

        <!-- Disabled because it is broken and tries to separate phpdoc variables. -->
        <exclude name="Symfony.Commenting.Annotations.Invalid"/>

        <!-- Don't use sentence structure for @throws params. -->
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
    </rule>

    <!-- Enable @inheritdoc Support -->
    <rule ref="Squiz.Commenting.FunctionComment">
        <properties>
            <property name="skipIfInheritdoc" value="true" />
        </properties>
    </rule>

    <!-- Allow the config files to have no new lines before block comments. -->
    <rule ref="Squiz.Commenting.BlockComment.NoEmptyLineBefore">
        <exclude-pattern>config/*</exclude-pattern>
    </rule>

    <!-- Allow dashes in template files. -->
    <rule ref="Symfony.Files.AlphanumericFilename.Invalid">
        <exclude-pattern>page-templates/*</exclude-pattern>
        <exclude-pattern>template-parts/*</exclude-pattern>
        <exclude-pattern>templates/*</exclude-pattern>
    </rule>

    <!-- Set the soft line limit to 100 characters and the hard limit to 120. -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="100"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>

    <rule ref="./phpcs.override.xml"/>
</ruleset>
